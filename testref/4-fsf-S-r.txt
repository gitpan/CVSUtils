2000-08-28 20:11  sussman

	* configure.in (1.16):

	Factorized main() out of standard svn test programs.  

2000-08-28 16:21  kfogel

	* libsvn_delta/: delta.h (1.17), delta_parse.c (1.63), prop_parse.c
	(1.7):

	Fixed Collab.Net url, and other name change tweaks.  

2000-08-25 21:31  jimb

	* configure.in (1.15):

	* configure.in: Include subversion/libsvn_fs/Makefile in the list of 
	Makefiles to produce.  
	* subversion/Makefile.am (SUBDIRS): Add libsvn_fs.  
	* subversion/include/svn_error.h (svn_errno_t): Add new error code, 
	SVN_ERR_FS_GENERAL.  
	* subversion/libsvn_fs: First inklings of filesystem implementation.  
	
	PR: Obtained from: Submitted by: Reviewed by: 

2000-08-25 20:09  kfogel

	* libsvn_delta/: delta.h (1.16), delta_parse.c (1.62), prop_parse.c
	(1.6):

	Replace Collab.Net with CollabNet everywhere.  

2000-08-22 21:35  sussman

	* libsvn_delta/: delta.h (1.15), delta_parse.c (1.61):

	- svn_delta_make_xml_parser:  prefix removed, this is a static
	routine.  
	
	- svn_delta__tagmap[] added, rewrote do_stack_remove and set_tagtype 
	                             accordingly... MUCH cleaner now.  
	
	- svn_delta__digger_t:  "stack" argument now represents YOUNGEST 
	                         stackframe.  Many routines simplified
	                         because of this.  (find_stack_newest()
	removed.) 
	
	- do_stack_append: check that the first frame appended is always a 
	                   tree-delta.  

2000-08-22 20:05  kfogel

	* libsvn_delta/delta_parse.c (1.60):

	(maybe_derive_ancestry): declare p in the scope where it is used.  

2000-08-22 20:04  kfogel

	* libsvn_delta/delta_parse.c (1.59):

	(maybe_derive_ancestry): eliminate first_frame argument; we don't
	need it anymore.  Caller changed.  

2000-08-22 19:55  kfogel

	* libsvn_delta/delta_parse.c (1.58):

	(SVN_PATH_LOCAL_STYLE, SVN_PATH_REPOS_STYLE): new #defines.  
	
	(svn_path_remove_component, svn_path_add_component, 
	svn_path_add_component_nts, add_path_internal): use them.  
	
	All callers changed.  
	
	This gives an interface handling both local paths (for files) and 
	repository paths (for ancestry), though the implementation is all 
	Unix-style right now, which is the same as repository style.  

2000-08-22 17:30  kfogel

	* libsvn_delta/delta_parse.c (1.57):

	Put mini-library for path manipulation into libsvn_subr.  
	
	(maybe_derive_ancestor): always set to a full ancestry path, derived 
	from both ancestors and names.  

2000-08-22 16:46  sussman

	* libsvn_delta/: delta_parse.c (1.56), prop_parse.c (1.5):

	
	 * when printing errors, specify if svn-specific 
	 * fixed prop-delta handling routine 
	 * fixed prop-delta "delete" validation logic 
	
	Prop-deltas seem to work correctly now! 

2000-08-22 04:04  kfogel

	* libsvn_delta/: delta.h (1.14), delta_parse.c (1.55), prop_parse.c
	(1.4):

	Derive ancestry correctly: 
	
	(derive_ancestry): new function, walks up from bottom frame, looking 
	for ancestry information.  
	
	(do_stack_append): use it.  
	
	Plus, many changes for namespace protection: 
	
	(svn_delta__vcdiff_parser_t): replaces `svn_vcdiff_parser_t'.  
	(svn_delta__make_vcdiff_parser): replaces `svn_make_vcdiff_parser'.  
	(svn_delta__vcdiff_parse): replaces `svn_vcdiff_parse'.  
	(svn_delta__vcdiff_flush_buffer): replaces
	`svn_vcdiff_flush_buffer'.  
	(svn_delta__stackframe_t, some_random_symbol_for_testing_cvs2cl, 
	another_symbol_after_the_newline, and_another, 
	oh_my_goodness_will_it_never_stop, stop_too_many_symbols, 
	i_am_going_crazy_aiyeee): replaces `svn_delta_stackframe_t', and
	then I tacked some more text onto the end of this entry so it would
	span multiple lines like so, see? 
	(svn_delta__digger_t): replaces `svn_delta_digger_t'.  
	(svn_delta__pdelta_parser_t): replaces `svn_pdelta_parser_t'.  
	(svn_delta__make_pdelta_parser): replaces `svn_make_pdelta_parser'.  
	(svn_delta__pdelta_parse): replaces `svn_pdelta_parse'.  
	(svn_delta__reset_parser_subpool): replaces
	`svn_reset_parser_subpool'.  
	(svn_delta__XML_t): replaces `svn_XML_t', and therefore: 
	
	   `svn_delta__XML_treedelta'  replaces   `svn_XML_treedelta' 
	   `svn_delta__XML_new'        replaces   `svn_XML_new' 
	   `svn_delta__XML_delete'     replaces   `svn_XML_delete' 
	   `svn_delta__XML_replace'    replaces   `svn_XML_replace' 
	   `svn_delta__XML_file'       replaces   `svn_XML_file' 
	   `svn_delta__XML_dir'        replaces   `svn_XML_dir' 
	   `svn_delta__XML_textdelta'  replaces   `svn_XML_textdelta' 
	   `svn_delta__XML_propdelta'  replaces   `svn_XML_propdelta' 
	   `svn_delta__XML_set'        replaces   `svn_XML_set' 

2000-08-22 00:25  kfogel

	* libsvn_delta/: delta.h (1.13), delta_parse.c (1.54):

	Changes to handle ancestor paths and versions correctly: 
	
	(svn_version_t): removed, use `svn_vernum_t' instead.  
	
	(svn_delta_stackframe_t): Added `ancestor_path' and
	`ancestor_version' fields.  
	
	(xml_handle_start): look for "ancestor" and "ver" attributes, set
	them in frame if present.  
	
	(do_stack_append): validate above new fields, then make them default 
	to parent's values.  
	
	(do_directory_callback): pass correct ancestry information to
	callbacks.  

2000-08-21 22:43  sussman

	* libsvn_delta/delta_parse.c (1.53):

	save state 

2000-08-21 22:15  sussman

	* libsvn_delta/: delta.h (1.12), delta_parse.c (1.52), prop_parse.c
	(1.3):

	Property-delta stuff at least compiles correctly now.  :) 

2000-08-19 01:17  kfogel

	* libsvn_delta/: delta.h (1.11), delta_parse.c (1.51):

	(svn_delta_digger_t): call it `pdelta_chunk_parser' instead of 
	`chunk_parser', just to keep things straight.  
	
	Pass the new handler_baton, a.k.a. consumer_baton, as appropriate.  

2000-08-19 01:10  kfogel

	* libsvn_delta/delta.h (1.10):

	Moved `svn_pdelta_chunk_parser_t' from public to internal.  
	
	(svn_delta_walker_t): add `handler_baton' argument to 
	finish_propdelta, finish_textdelta.  

2000-08-19 01:03  kfogel

	* libsvn_delta/delta.h (1.9):

	Move `svn_vcdiff_parser_t' from public to internal.  

2000-08-18 23:59  kfogel

	* libsvn_delta/delta_parse.c (1.50):

	Don't drop those batons.  

2000-08-18 22:42  kfogel

	* libsvn_delta/delta_parse.c (1.49):

	Use `ancestor_path' and `ancestor_version', instead of `base_path'
	and `base_version', because less likely to cause confusion.  

2000-08-18 22:37  kfogel

	* libsvn_delta/: delta.h (1.8), prop_parse.c (1.2):

	Use new delta walker interface.  
	
	(Fix a few minor things in the delta library, too: missing prototype 
	and missing return value.  Everything compiles now.) 

2000-08-18 22:30  sussman

	* libsvn_delta/: delta.h (1.7), delta_parse.c (1.48), prop_parse.c
	(1.1):

	We made a interface change in svn_walk_t, which then required much 
	hacking on libsvn_delta.  deltaparse-test now works correctly again.  
	
	We're now ready to start filling out prop_parse.c! 

2000-08-18 17:09  kfogel

	* libsvn_delta/delta_parse.c (1.47):

	Added copyright info, load svn-dev.el.  
	
	This commit is also mainly to reproduce a problem with
	commitlogging.  

2000-08-18 00:49  kfogel

	* libsvn_delta/: delta.h (1.6), delta_parse.c (1.46):

	Making WC library use the new stuff in delta library: 
	
	`svn_text_delta_window_handler_t' replaces `svn_delta_handler_t', 
	because more specific.  All uses changed.  
	
	(svn_delta_op_t): call field `action_code' instead of `op'.  Having 
	two different things both called "op" was making my brain spin.  All
	uses changed.  
	
	(do_file_callback, do_directory_callback): parenthesize for
	precedence clarity.  
	
	(svn_vcdiff_parse): increment buffer offset only if ate a byte.  
	
	(svn_vcdiff_send_window): check if callback func is null before 
	calling it.  
	
	(check_existence): include APR_READ flag when testing, because 
	apr_open() always returns APR_EACCES if you fail to request at least 
	one of reading or writing.  Also, remove the file after testing.  
	
	(window_handler): new func in wc library; skeleton, everything will 
	depend on the baton.  
	
	(add_file, replace_file): store window_handler in *handler.  
	
	(checkout-test.c:main): be robuster.  
	
	(test_read_fn): interpret results of apr_full_read() correctly.  

2000-08-17 22:45  sussman

	* libsvn_delta/delta_parse.c (1.45):

	AHA... deltaparse-test actually WORKS.  Time for a beer.  

2000-08-17 19:39  sussman

	* libsvn_delta/delta.h (1.5):

	vcdiff_parse.c now compiles.  

2000-08-17 19:18  sussman

	* libsvn_delta/delta_parse.c (1.44):

	compiles now, typo.  

2000-08-17 17:47  sussman

	* libsvn_delta/: delta.h (1.4), delta_parse.c (1.43):

	Almost ready to start compiling deltaparse-test 

2000-08-16 23:01  kfogel

	* libsvn_delta/delta_parse.c (1.42):

	(svn_delta_read_fn_t): add pool argument.  All callers changed.  
	
	(svn_vernum_t): new type.  Callers who formerly used `long int' use 
	this now.  
	
	(svn_wc_apply_delta): correct arguments.  Def and callers changed.  
	
	(svn_delta_parse): pass pool to reader function.  
	
	(test_read_fn): finished.  
	
	Tweaked #includes and Makefiles as appropriate, and defined skeleton 
	functions.  

2000-08-16 21:38  kfogel

	* libsvn_delta/delta_parse.c (1.41):

	You are in a maze of twisty compilation errors, each slightly 
	different.  

2000-08-16 21:36  kfogel

	* libsvn_delta/delta.h (1.3):

	(svn_delta_to_vcdiff): removed this hulking remnant of the bad old 
	caller-pull days.  

2000-08-16 16:37  kfogel

	* libsvn_delta/delta_parse.c (1.40):

	(get_attribute_value): completed.  Never errors now, just returns
	the value or NULL.  
	
	All callers changed.  

2000-08-14 22:23  sussman

	* libsvn_delta/: delta.h (1.2), delta_parse.c (1.39):

	delta_parse.c is basically finished for now;  ready to start
	fleshing out       dummy vcdiff parser stuff.  

2000-08-14 19:04  sussman

	* libsvn_delta/: delta.h (1.1), delta_parse.c (1.38):

	Moved private stuff from public header to private header.  

2000-08-14 17:58  sussman

	* libsvn_delta/delta_parse.c (1.37):

	Merged jimb's walker structure into svn_delta.h, jimb's own header
	is not (any longer) relevant.  :) 
	
	Busy filling out parser's routines to call various svn_walker_t
	callbacks.  

2000-08-11 20:57  sussman

	* libsvn_delta/delta_parse.c (1.36):

	Entire interface rewritten, in process of flushing out specific
	events now.  

2000-08-11 17:50  sussman

	* libsvn_delta/delta_parse.c (1.35):

	Tweak validity check.  

2000-08-11 16:37  sussman

	* libsvn_delta/delta_parse.c (1.34):

	Split telescope_delta_stack() into two routines, for better clarity.  
	They have different validity-checking logic, and different execution 
	logic.  

2000-08-11 01:07  sussman

	* libsvn_delta/delta_parse.c (1.33):

	Saving work... in the middle of huge rewrite, a big mess.  I'm doing
	this because of repeated power outages here at home.  (I need to buy
	a UPS *now*) 

2000-08-10 22:01  sussman

	* libsvn_delta/delta_parse.c (1.32):

	Still rewriting parser.  

2000-08-10 21:10  sussman

	* libsvn_delta/delta_parse.c (1.31):

	New error-returning strategy: 
	
	If we encounter a validation error while inside an expat callback, 
	
		1.  store the error in our digger structure 
		2.  immediately set all of the expat callbacks to NULL 
	
	Item #2 causes XML_Parse() to finish its chunk rather quickly,
	whereby our main parser loop then notices the existence of #1 and
	returns.  

2000-08-10 21:03  sussman

	* libsvn_delta/delta_parse.c (1.30):

	In process of rewriting parser machinery.  

2000-08-09 04:34  sussman

	* libsvn_delta/delta_parse.c (1.29):

	temporarily report malformed XML errors 

2000-08-09 00:24  sussman

	* libsvn_delta/delta_parse.c (1.28):

	Duh, don't forget to set previous ptr after appending stackframe.  

2000-08-08 23:10  kfogel

	* libsvn_delta/delta_parse.c (1.27):

	The usual strcmp() mishap.  

2000-08-08 21:57  kfogel

	* libsvn_delta/delta_parse.c (1.26):

	Fix allocation size buglets.  

2000-08-08 20:54  jimb

	* configure.in (1.14):

	For the moment, don't include -O2 in CFLAGS by default, as that 
	interferes with debugging.  

2000-08-08 20:01  kfogel

	* configure.in (1.13):

	add some CFLAGS if gcc 

2000-08-08 19:29  kfogel

	* libsvn_delta/delta_parse.c (1.25):

	Recurse, or, as Noah Friedman likes to say, "recur".  

2000-08-08 18:41  kfogel

	* libsvn_delta/delta_parse.c (1.24):

	Allow null callbacks.  

2000-08-08 17:34  sussman

	* libsvn_delta/delta_parse.c (1.23):

	Delta library compiles now.  

2000-08-08 16:50  kfogel

	* configure.in (1.12):

	(AC_OUTPUT): generate Makefiles for libsvn_delta libsvn_wc.  

2000-08-08 16:35  sussman

	* libsvn_delta/delta_parse.h (1.3):

	Don't need intra-library header, but we do need automake.  

2000-08-08 16:33  sussman

	* libsvn_delta/delta_parse.c (1.22):

	Make all routines static, except for one public interface: 
	svn_delta_make_xml_parser() 

2000-08-08 00:30  sussman

	* libsvn_delta/delta_parse.c (1.21):

	Added type-checking to frame append/unpend.  

2000-08-07 23:35  kfogel

	* libsvn_delta/delta_parse.c (1.20):

	(svn_walk_delta): gone.  No need for a generic delta walker -- it's
	so simple, it'll be clearer to write out the logic each time and
	avoid an awkward callback mechanism.  

2000-08-07 22:44  sussman

	* libsvn_delta/delta_parse.c (1.19):

	Finished stackframe rewrite... much cleaner.  

2000-08-07 22:04  sussman

	* libsvn_delta/delta_parse.c (1.18):

	in process of rewriting w/ stack frames 

2000-08-05 23:35  sussman

	* libsvn_delta/delta_parse.c (1.17):

	Filled in some constructors.  

2000-08-05 23:19  sussman

	* libsvn_delta/delta_parse.c (1.16):

	Finished 2nd draft (big rewrite) of: 
	
	 svn_find_delta_bottom() 
	 svn_starpend_delta() 
	 svn_xml_handle_start() 
	 svn_xml_handle_end() 

2000-08-05 22:56  kfogel

	* libsvn_delta/delta_parse.c (1.15):

	Codus Interruptus, saving state: 
	
	Implementing svn_walk_delta() before implementing delta_to_path() 
	before implementing update_dir_handler().  
	
	Someone remind me to read this log entry to figure what to do next.  
	
	(svn_walk_delta): in progress.  
	
	(update_dir_handler): waiting on above and delta_to_path().  

2000-08-05 22:40  sussman

	* libsvn_delta/delta_parse.c (1.14):

	Factorization in progress.  

2000-08-05 22:19  sussman

	* libsvn_delta/delta_parse.c (1.13):

	Fleshed out most of svn_xml_handle_end().  

2000-08-05 22:03  sussman

	* libsvn_delta/delta_parse.c (1.12):

	Finished svn_starpend_delta() -- appends object to bottom of delta,
	or deletes bottommost object in delta.  
	
	Uses new version of svn_find_delta_bottom(), which now returns both 
	the bottommost *and* penultimate objects in the delta (needed for 
	deletion.) 

2000-08-05 21:07  sussman

	* libsvn_delta/delta_parse.c (1.11):

	Broke apart recursive delta cdr() logic from appending logic.  

2000-08-05 20:48  kfogel

	* libsvn_delta/delta_parse.c (1.10):

	(svn_delta_make_xml_parser): new constructor function (rename of 
	svn_xml_make_parser).  
	
	Use it in test program.  

2000-08-05 17:56  sussman

	* libsvn_delta/: delta_parse.c (1.9), delta_parse.h (1.2):

	Remove useless constructors. :) 

2000-08-05 17:41  kfogel

	* libsvn_delta/delta_parse.c (1.8):

	Made note about possible context optimization for data handler 
	callback.  

2000-08-05 17:34  kfogel

	* libsvn_delta/delta_parse.c (1.7):

	Working with Ben: 
	
	Got rid of `svn_ancestor_t' -- it was only used for one thing, so
	just hold its fields inline.  
	
	Say `this_edit_content' instead of `new_edit_content', to avoid 
	implying that the type of the edit is `new'.  
	
	Point out some remaining bookkeeping tasks in comments.  
	
	Got rid of some old debugging code.  

2000-08-05 16:53  sussman

	* libsvn_delta/delta_parse.c (1.6):

	First draft of svn_xml_startElement().  

2000-08-05 16:17  sussman

	* libsvn_delta/: delta_parse.c (1.5), delta_parse.h (1.1):

	Filling out main expat callback.  

2000-08-05 03:44  sussman

	* libsvn_delta/delta_parse.c (1.4):

	
	1. Defined new enum svn_XML_elt_t, describing different XML elts we
	   may encounter when building a delta.  
	
	2. Defined svn_append_to_delta(delta, object, svn_XML_elt_t), which 
	   traverses a delta-in-progress recursively and attaches object to
	   the tip.  
	
	3. Started filling in main expat "open paren" callback with above
	routine.  

2000-08-04 22:42  kfogel

	* libsvn_delta/delta_parse.c (1.3):

	Start constructors for delta components; we'll need destructors,
	too.  

2000-08-04 21:40  sussman

	* libsvn_delta/delta_parse.c (1.2):

	Started XML-to-Delta callback system.  

2000-08-04 19:23  sussman

	* libsvn_delta/delta_parse.c (1.1):

	moving files around 

2000-08-03 14:39  sussman

	* configure.in (1.11):

	whoa, APR has changed.  s/ap_/apr_ 

2000-08-02 22:19  sussman

	* configure.in (1.10):

	./configure now tells apr/ to run configure; our top-level Makefile
	builds apr first now, too.  

2000-08-01 21:29  sussman

	* configure.in (1.9):

	tweak 

2000-08-01 18:06  sussman

	* configure.in (1.8):

	doc/ should be autoconf'd now 

2000-08-01 01:26  sussman

	* configure.in (1.7):

	save work 

2000-08-01 00:34  sussman

	* configure.in (1.6):

	still autoconfiscating... getting the hang of it. :) 

2000-07-31 19:04  sussman

	* configure.in (1.5):

	hacking on autoconfiscation 

2000-07-14 00:08  kfogel

	* configure.in (1.4):

	Okay, stringtest builds too.  

2000-07-13 23:53  kfogel

	* configure.in (1.3):

	Got libsvn_string.so building...  

2000-07-13 05:57  kfogel

	* configure.in (1.2):

	more autoconfiscation work 

2000-07-13 05:11  kfogel

	* configure.in (1.1):

	autoconfiscation in progress 

