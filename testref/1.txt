2000-05-05 17:33  mresiboi

	* Persistent.java: use shouldTrace for tracing.

2000-05-05 17:33  mresiboi

	* Trace.java: added public shouldTrace

2000-04-14 18:03  tdraier

	* Persistent.java, Persistent.java: debugged setNew()

2000-04-14 17:36  tdraier

	* Persistent.java, Persistent.java: debugged setNew()

2000-04-13 18:06  tdraier

	* Persistent.java, Persistent.java: debugged the setRestoring state

2000-04-11 09:23  tdraier

	* Persistent.java, Persistent.java: added protection against
	circular restores

2000-04-11 08:28  tdraier

	* Persistent.java: forgot variable initialisation

2000-04-10 11:34  tdraier

	* Persistent.java, Persistent.java: debugged problem with soft
	reference

2000-04-10 11:16  tdraier

	* Persistent.java: debugged problem with soft reference

2000-04-05 14:55  tdraier

	* Persistent.java: up to date with branch

2000-04-05 14:00  tdraier

	* Persistent.java: forgot a notify in reload (transaction aborting)

2000-04-05 13:58  tdraier

	* Persistent.java: up to date

2000-04-04 16:10  hchahine

	* Persistent.java: added an outside test to return persistent
	object

2000-04-04 10:07  tdraier

	* Persistent.java: added a timeout on modify

2000-04-04 08:50  hchahine

	* Persistent.java: Merged it with branch

2000-04-03 16:06  tdraier

	* Persistent.java: -synchronize / wait / notify on modify -added
	softmaps

2000-03-30 15:50  tdraier

	* Persistent.java: - no comment

2000-03-30 12:25  hchahine

	* Persistent.java: added rmi compliant

2000-03-28 16:13  hchahine

	* Persistent.java: Modified concurrency

2000-03-28 16:08  hchahine

	* Persistent.java: Modified concurrency

2000-03-27 12:47  hchahine

	* Persistent.java: Synchronization update

2000-03-27 12:22  hchahine

	* Persistent.java: Synchronization update

2000-03-27 08:55  hchahine

	* Persistent.java: Removed softmapping and re-introduced Hashtable
	for concurrency conflicts.

2000-03-24 18:15  saitabai

	* Persistent.java: reload the last persist version 2)

2000-03-24 17:44  saitabai

	* Persistent.java: reload the last persist version

2000-03-23 18:03  tdraier

	* Persistent.java, Persistent.java: -added synchronization on all
	getPersistent/getUnpersistent/addCache method to protect access to
	critical resources like objects hashtables.  -added synchronization
	on persistent when restoring -replaced Hashtable with SoftMap for
	memory management -indented ugly code

2000-03-21 16:59  tdraier

	* Persistent.java: added multi thread support by using
	synchronized/wait/notify

2000-03-21 11:39  hchahine

	* Persistent.java: Added synchronization mutex for keys to solve
	concurrency management

2000-03-21 09:17  tdraier

	* Persistent.java: added remote exception

2000-03-20 15:38  hchahine

	* Persistent.java: Merged with branch

2000-03-20 15:03  hchahine

	* Persistent.java: Merged trunc with Branch

2000-03-17 20:28  tdraier

	* Persistent.java: merged from branch 2.0

2000-03-13 17:33  zfehri

	* Persistent.java: rmi compliant (ziad)

2000-03-08 13:11  hchahine

	* Persistent.java: Changed a trace that was returning a null
	pointer exception in building inheritance

2000-03-08 13:04  hchahine

	* Persistent.java: Corrected a bug in setDbHandle, it was testing
	for the dbhandle if null although it has just being set to a non
	null value

2000-02-29 21:29  tdraier

	* Persistent.java: replaced SoftMap with Hashtable

2000-02-29 18:35  tdraier

	* Persistent.java: also works with this.

2000-02-29 18:29  tdraier

	* Persistent.java: -added use of softreferences for memory
	management -debugged setNew() bug

2000-02-29 15:45  hchahine

	* Persistent.java: Tested and modified objects to determine the
	nature of a bug that I couldn't trace

2000-02-24 10:54  jrabas

	* Persistent.java, Trace.java: no message

2000-02-23 14:37  hchahine

	* Persistent.java: updated the connections to wait for locks

2000-02-23 12:07  hchahine

	* Persistent.java: Removed instantiation exeption from trace, only
	for abstract classes

2000-02-22 16:19  hchahine

	* Persistent.java: Cleared the problem with multi threads accessing
	the cache and polling for a connection

2000-02-22 16:13  hchahine

	* Persistent.java: Cleared the problem with multi threads accessing
	the cache and polling for a connection

2000-02-21 18:12  hchahine

	* Persistent.java: Modified setNew to cope with serials as well

2000-02-21 16:56  tdraier

	* Persistent.java: modified setNew() usage for persistence debug

2000-02-21 16:19  hchahine

	* Persistent.java: Merged it with trunc

2000-02-21 16:17  hchahine

	* Persistent.java: Merged it with branch

2000-02-17 16:15  ptruong

	* Trace.java: added thread name in trace

2000-02-17 16:15  ptruong

	* Persistent.java: removed useless (and blocking) synchronization

2000-02-10 16:06  hchahine

	* Persistent.java: Modified set new

2000-02-01 11:27  zfehri

	* Persistent.java: working version (i hope)

2000-01-27 16:15  lbain

	* Trace.java, Persistent.java: no message

2000-01-20 14:49  saitabai

	* Trace.java: delete the modification (counters)

2000-01-20 13:53  saitabai

	* Trace.java: directory test

2000-01-17 18:05  ttran

	* Persistent.java: no message

2000-01-17 17:23  tdraier

	* Persistent.java: CORRECTED

2000-01-17 16:59  tdraier

	* Persistent.java: remove/put br ( cr )

2000-01-17 15:28  hchahine

	* Persistent.java: Modified

2000-01-06 15:56  zfehri

	* Persistent.java: RMI COMPLIANT

1999-12-30 17:04  obalbous

	* Persistent.java: some fixes

1999-12-22 15:59  hchahine

	* Persistent.java: Modified persistent to cope with transaction
	processing different, by rolling back it reverts all objects back
	to the way they were

1999-12-02 15:28  mresiboi

	* Persistent.java: fixed problem when dealing with inheritence,
	double inserts and direct derivation from RFObject

1999-12-01 07:52  rdyson

	* Persistent.java: Removed a call to setChanged() when deleting,
	saving an extra unnecessary SQL statment for each delete.

1999-11-29 18:54  tdraier

	* Persistent.java: added unsetSerial

1999-11-29 17:59  cvsadmin

	* Persistent.java, Trace.java: Initial revision.

